{
 "Resources": {
  "MyVpcF9F0CA6F": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "Bonjour/MyVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/Resource"
   }
  },
  "MyVpcPublicSubnet1SubnetF6608456": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Bonjour/MyVpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PublicSubnet1/Subnet"
   }
  },
  "MyVpcPublicSubnet1RouteTableC46AB2F4": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Bonjour/MyVpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PublicSubnet1/RouteTable"
   }
  },
  "MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4"
    },
    "SubnetId": {
     "Ref": "MyVpcPublicSubnet1SubnetF6608456"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "MyVpcPublicSubnet1DefaultRoute95FDF9EB": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MyVpcIGW5C4A4F63"
    },
    "RouteTableId": {
     "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4"
    }
   },
   "DependsOn": [
    "MyVpcVPCGW488ACE0D"
   ],
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PublicSubnet1/DefaultRoute"
   }
  },
  "MyVpcPublicSubnet1EIP096967CB": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "Bonjour/MyVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PublicSubnet1/EIP"
   }
  },
  "MyVpcPublicSubnet1NATGatewayAD3400C1": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "MyVpcPublicSubnet1EIP096967CB",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "MyVpcPublicSubnet1SubnetF6608456"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Bonjour/MyVpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "MyVpcPublicSubnet1DefaultRoute95FDF9EB",
    "MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB"
   ],
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PublicSubnet1/NATGateway"
   }
  },
  "MyVpcPublicSubnet2Subnet492B6BFB": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Bonjour/MyVpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PublicSubnet2/Subnet"
   }
  },
  "MyVpcPublicSubnet2RouteTable1DF17386": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Bonjour/MyVpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PublicSubnet2/RouteTable"
   }
  },
  "MyVpcPublicSubnet2RouteTableAssociation227DE78D": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcPublicSubnet2RouteTable1DF17386"
    },
    "SubnetId": {
     "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "MyVpcPublicSubnet2DefaultRoute052936F6": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MyVpcIGW5C4A4F63"
    },
    "RouteTableId": {
     "Ref": "MyVpcPublicSubnet2RouteTable1DF17386"
    }
   },
   "DependsOn": [
    "MyVpcVPCGW488ACE0D"
   ],
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PublicSubnet2/DefaultRoute"
   }
  },
  "MyVpcPublicSubnet2EIP8CCBA239": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "Bonjour/MyVpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PublicSubnet2/EIP"
   }
  },
  "MyVpcPublicSubnet2NATGateway91BFBEC9": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "MyVpcPublicSubnet2EIP8CCBA239",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Bonjour/MyVpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "MyVpcPublicSubnet2DefaultRoute052936F6",
    "MyVpcPublicSubnet2RouteTableAssociation227DE78D"
   ],
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PublicSubnet2/NATGateway"
   }
  },
  "MyVpcPrivateSubnet1Subnet5057CF7E": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "Bonjour/MyVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PrivateSubnet1/Subnet"
   }
  },
  "MyVpcPrivateSubnet1RouteTable8819E6E2": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Bonjour/MyVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PrivateSubnet1/RouteTable"
   }
  },
  "MyVpcPrivateSubnet1RouteTableAssociation56D38C7E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2"
    },
    "SubnetId": {
     "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "MyVpcPrivateSubnet1DefaultRouteA8CDE2FA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MyVpcPublicSubnet1NATGatewayAD3400C1"
    },
    "RouteTableId": {
     "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "MyVpcPrivateSubnet2Subnet0040C983": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "Bonjour/MyVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PrivateSubnet2/Subnet"
   }
  },
  "MyVpcPrivateSubnet2RouteTableCEDCEECE": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Bonjour/MyVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PrivateSubnet2/RouteTable"
   }
  },
  "MyVpcPrivateSubnet2RouteTableAssociation86A610DA": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE"
    },
    "SubnetId": {
     "Ref": "MyVpcPrivateSubnet2Subnet0040C983"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "MyVpcPrivateSubnet2DefaultRoute9CE96294": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MyVpcPublicSubnet2NATGateway91BFBEC9"
    },
    "RouteTableId": {
     "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "MyVpcIGW5C4A4F63": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Bonjour/MyVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/IGW"
   }
  },
  "MyVpcVPCGW488ACE0D": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "MyVpcIGW5C4A4F63"
    },
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/MyVpc/VPCGW"
   }
  },
  "ClusterEB0386A7": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "Bonjour/Cluster/Resource"
   }
  },
  "FargateServiceLBB353E155": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "FargateServiceLBSecurityGroup5F444C78",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "MyVpcPublicSubnet1SubnetF6608456"
     },
     {
      "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "MyVpcPublicSubnet1DefaultRoute95FDF9EB",
    "MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB",
    "MyVpcPublicSubnet2DefaultRoute052936F6",
    "MyVpcPublicSubnet2RouteTableAssociation227DE78D"
   ],
   "Metadata": {
    "aws:cdk:path": "Bonjour/FargateService/LB/Resource"
   }
  },
  "FargateServiceLBSecurityGroup5F444C78": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB BonjourFargateServiceLB0FE13A54",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/FargateService/LB/SecurityGroup/Resource"
   }
  },
  "FargateServiceLBSecurityGrouptoBonjourFargateServiceSecurityGroupB8A86CBA80181B6C73": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "FargateServiceSecurityGroup262B61DD",
      "GroupId"
     ]
    },
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "FargateServiceLBSecurityGroup5F444C78",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/FargateService/LB/SecurityGroup/to BonjourFargateServiceSecurityGroupB8A86CBA:80"
   }
  },
  "FargateServiceLBPublicListener4B4929CA": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "FargateServiceLBPublicListenerECSGroupBE57E081"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "FargateServiceLBB353E155"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/FargateService/LB/PublicListener/Resource"
   }
  },
  "FargateServiceLBPublicListenerECSGroupBE57E081": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/FargateService/LB/PublicListener/ECSGroup/Resource"
   }
  },
  "FargateServiceTaskDefTaskRole8CDCF85E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/FargateService/TaskDef/TaskRole/Resource"
   }
  },
  "FargateServiceTaskDef940E3A80": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "Image": "amazon/amazon-ecs-sample",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "FargateServiceTaskDefwebLogGroup71FAF541"
        },
        "awslogs-stream-prefix": "FargateService",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "web",
      "PortMappings": [
       {
        "ContainerPort": 80,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "FargateServiceTaskDefExecutionRole9194820E",
      "Arn"
     ]
    },
    "Family": "BonjourFargateServiceTaskDef61A4799A",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "FargateServiceTaskDefTaskRole8CDCF85E",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/FargateService/TaskDef/Resource"
   }
  },
  "FargateServiceTaskDefwebLogGroup71FAF541": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Bonjour/FargateService/TaskDef/web/LogGroup/Resource"
   }
  },
  "FargateServiceTaskDefExecutionRole9194820E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/FargateService/TaskDef/ExecutionRole/Resource"
   }
  },
  "FargateServiceTaskDefExecutionRoleDefaultPolicy827E7CA2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FargateServiceTaskDefwebLogGroup71FAF541",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "FargateServiceTaskDefExecutionRoleDefaultPolicy827E7CA2",
    "Roles": [
     {
      "Ref": "FargateServiceTaskDefExecutionRole9194820E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/FargateService/TaskDef/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "FargateServiceECC8084D": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "ClusterEB0386A7"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "web",
      "ContainerPort": 80,
      "TargetGroupArn": {
       "Ref": "FargateServiceLBPublicListenerECSGroupBE57E081"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "FargateServiceSecurityGroup262B61DD",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E"
       },
       {
        "Ref": "MyVpcPrivateSubnet2Subnet0040C983"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "FargateServiceTaskDef940E3A80"
    }
   },
   "DependsOn": [
    "FargateServiceLBPublicListenerECSGroupBE57E081",
    "FargateServiceLBPublicListener4B4929CA",
    "FargateServiceTaskDefTaskRole8CDCF85E"
   ],
   "Metadata": {
    "aws:cdk:path": "Bonjour/FargateService/Service/Service"
   }
  },
  "FargateServiceSecurityGroup262B61DD": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Bonjour/FargateService/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "DependsOn": [
    "FargateServiceTaskDefTaskRole8CDCF85E"
   ],
   "Metadata": {
    "aws:cdk:path": "Bonjour/FargateService/Service/SecurityGroup/Resource"
   }
  },
  "FargateServiceSecurityGroupfromBonjourFargateServiceLBSecurityGroup660CF9B080C7AA015A": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Load balancer to target",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "FargateServiceSecurityGroup262B61DD",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "FargateServiceLBSecurityGroup5F444C78",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "DependsOn": [
    "FargateServiceTaskDefTaskRole8CDCF85E"
   ],
   "Metadata": {
    "aws:cdk:path": "Bonjour/FargateService/Service/SecurityGroup/from BonjourFargateServiceLBSecurityGroup660CF9B0:80"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31STW/CMAz9LdxDtqJJ046MMYSEtqpFXFGams4QkiofIFT1vy9NKe3YtJOfX59j+7kTGkVPNBqxsxnz/DAWmNEqtYwfiKe2FfAJrTYlJ7Od3MQzErtMIE9dJsE2XI8S5SysWSag53tuaoziyCwqeRM3YL6Mm/DB7IJZOLMLiTWePOwfXkoL2uNO0E5yzabWz/p1BGlJCtxptJeFVq4MM/xLzAsNxvyilzLwNQFuaDUTzvjujaqD70wXrNnKHN5ghxK7ne4ZJS1DCXrAXWtT0CfkrU8tDO22JbPNqoZOy9K7HNxaKZa/MsEkh/yuHAQzFrnwiiwoUBYnf66/q8MSP/KhDv1u8qrp8OD72nf2F+iMHKQ1QXakVaLau4cYK18XDtWimghVeDdXqrg90eG6JgkY5XTrx6ezpWv/pwHrvcyDgzWRKge6Nw+n6IU+08fR3iCOtZMWj0CTNn4DnkO5YdUCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "Bonjour/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "FargateServiceLoadBalancerDNS9433D5F6": {
   "Value": {
    "Fn::GetAtt": [
     "FargateServiceLBB353E155",
     "DNSName"
    ]
   }
  },
  "FargateServiceServiceURL47701F45": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "FargateServiceLBB353E155",
        "DNSName"
       ]
      }
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}